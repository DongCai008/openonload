# SPDX-License-Identifier: GPL-2.0
# X-SPDX-Copyright-Text: (c) Solarflare Communications Inc
# bpfimpl.a: implementation of BPF ioctls, management, and all other
# kernel-side stuff, for linking in to linux_onload.ko and into userspace
# shim test applications

SRC_SUBDIRS	:= kernel

TARGETS		:= $(BPFIMPL_LIB)
MMAKE_TYPE	:= LIB
MMAKE_LIBS	+= $(LINK_KCOMPAT_LIB)

IMPL_SRCS	:=		\
		prog.c		\
		map.c		\
		map_array.c \
		onload_verifier.c		\
		onload_bpf_jit_comp_x86.c	\
		onload_bpf_jit_comp32_x86.c	\
		onload_tnum.c			\
		onload_core.c			\
		onload_disasm.c			\
		bpf_kernel_compat.c		\
		ooxdp.c				\
		oomap.c				\
		ookern.c			\

IMPL_USER_SRCS := \
        jitintf.c

IMPL_KERNEL_SRCS :=		\
		onload_hashtab.c		\
		onload_percpu_freelist.c	\
		onload_map_in_map.c		\
		onload_bpf_lru_list.c		\
		onload_lpm_trie.c		\
		onload_arraymap.c               \
		ooperf.c                        \
		imported_map.c			\


ifndef MMAKE_NO_RULES

MMAKE_OBJ_PREFIX := ci_bpf_
IMPL_OBJS := $(patsubst %.c,$(MMAKE_OBJ_PREFIX)%.o,$(IMPL_SRCS) $(IMPL_USER_SRCS))

# Add the local include directory after the standard include path to allow
# us to provide system includes where missing.
MMAKE_INCLUDE := $(MMAKE_INCLUDE) \
                 -I$(TOP)/$(CURRENT)/kernel_replace/stub_include \
                 -I$(TOP)/$(CURRENT)/kernel/bpf_include

ALL		:= $(TARGETS)


all: $(ALL)

lib: $(TARGETS)

clean:
	@$(MakeClean)
	rm -f uk_bpf_intf_ver.h


$(BPFIMPL_LIB): $(IMPL_OBJS)
	$(MMakeLinkStaticLib)

endif


######################################################################
# Autogenerated header for checking user/kernel consistency.
#
_UK_BPF_INTF_HDRS	:= onload/bpf_api.h onload/bpf_ioctl.h

UK_BPF_INTF_HDRS	:= $(_UK_BPF_INTF_HDRS:%=$(SRCPATH)/include/%)

ifdef MMAKE_USE_KBUILD
objd	:= $(obj)/
else
objd	:=
endif

$(objd)uk_bpf_intf_ver.h: $(UK_BPF_INTF_HDRS)
	@echo "  GENERATE $@"
	@md5=$$(cat $(UK_BPF_INTF_HDRS) | md5sum | sed 's/ .*//'); \
	echo "#define OO_UK_BPF_INTF_VER  \"$$md5\"" >"$@"

$(objd)$(MMAKE_OBJ_PREFIX)prog.o: $(objd)uk_bpf_intf_ver.h


######################################################
# linux kbuild support
#
ifdef MMAKE_USE_KBUILD

LINUXINCLUDE += -I$(TOPPATH)/$(CURRENT)/kernel_replace/stub_include
LINUXINCLUDE := -I$(TOPPATH)/$(CURRENT)/kernel/bpf_include \
                -I$(TOPPATH)/$(CURRENT)/kernel_replace/replace_include \
                $(LINUXINCLUDE)

all:
	 $(MAKE) $(MMAKE_KBUILD_ARGS) KBUILD_EXTMOD=$(BUILDPATH)/lib/bpf/bpfimpl _module_$(BUILDPATH)/lib/bpf/bpfimpl
clean:
	@$(MakeClean)
	rm -f uk_bpf_intf_ver.h bpf_lib.o
endif

ifdef MMAKE_IN_KBUILD
ifeq ($(KBUILD_BPF_SUPPORTED),1)
IMPL_OBJS := $(IMPL_SRCS:%.c=%.o) $(IMPL_KERNEL_SRCS:%.c=%.o)
bpf_lib-y    := $(IMPL_OBJS)
obj-m := bpf_lib.o
endif
endif

echo_IMPL_SRCS:
	@echo $(IMPL_SRCS)

